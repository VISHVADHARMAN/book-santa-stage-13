{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\book-santa-stage-13\\\\screens\\\\NotificationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ListItem, Icon } from \"react-native-elements\";\nimport firebase from \"firebase\";\nimport MyHeader from \"../components/MyHeader\";\nimport SwipeableFlatlist from \"../components/SwipeableFlatlist\";\nimport db from \"../config\";\n\nvar NotificationScreen = function (_Component) {\n  _inherits(NotificationScreen, _Component);\n\n  var _super = _createSuper(NotificationScreen);\n\n  function NotificationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getNotifications = function () {\n      _this.notificationRef = db.collection(\"all_notifications\").where(\"notification_status\", \"==\", \"unread\").where(\"targeted_user_id\", \"==\", _this.state.userId).onSnapshot(function (snapshot) {\n        var allNotifications = [];\n        snapshot.docs.map(function (doc) {\n          var notification = doc.data();\n          notification[\"doc_id\"] = doc.id;\n          allNotifications.push(notification);\n        });\n\n        _this.setState({\n          allNotifications: allNotifications\n        });\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(ListItem, {\n        key: index,\n        leftElement: React.createElement(Icon, {\n          name: \"book\",\n          type: \"font-awesome\",\n          color: \"#696969\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }\n        }),\n        title: item.book_name,\n        titleStyle: styles.LiTitle,\n        subtitle: item.message,\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      allNotifications: []\n    };\n    _this.notificationRef = null;\n    return _this;\n  }\n\n  _createClass(NotificationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNotifications();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.notificationRef();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Notifications\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, this.state.allNotifications.length === 0 ? React.createElement(View, {\n        style: styles.imageView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Notification.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, \"You have no notifications\")) : React.createElement(SwipeableFlatlist, {\n        allNotifications: this.state.allNotifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return NotificationScreen;\n}(Component);\n\nexport { NotificationScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deeeed\"\n  },\n  imageView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  LiTitle: {\n    color: \"black\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/book-santa-stage-13/screens/NotificationScreen.js"],"names":["React","Component","ListItem","Icon","firebase","MyHeader","SwipeableFlatlist","db","NotificationScreen","props","getNotifications","notificationRef","collection","where","state","userId","onSnapshot","snapshot","allNotifications","docs","map","doc","notification","data","id","push","setState","keyExtractor","item","index","toString","renderItem","book_name","styles","LiTitle","message","auth","currentUser","email","container","flex","navigation","length","imageView","require","fontSize","StyleSheet","create","backgroundColor","justifyContent","alignItems","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, View, FlatList, Text, Image } from \"react-native\";\nimport { ListItem, Icon } from \"react-native-elements\";\nimport firebase from \"firebase\";\nimport MyHeader from \"../components/MyHeader\";\nimport SwipeableFlatlist from \"../components/SwipeableFlatlist\";\nimport db from \"../config\";\n\nexport default class NotificationScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userId: firebase.auth().currentUser.email,\n      allNotifications: []\n    };\n\n    this.notificationRef = null;\n  }\n\n  getNotifications = () => {\n    this.notificationRef = db\n      .collection(\"all_notifications\")\n      .where(\"notification_status\", \"==\", \"unread\")\n      .where(\"targeted_user_id\", \"==\", this.state.userId)\n      .onSnapshot(snapshot => {\n        var allNotifications = [];\n        snapshot.docs.map(doc => {\n          var notification = doc.data();\n          notification[\"doc_id\"] = doc.id;\n          allNotifications.push(notification);\n        });\n        this.setState({\n          allNotifications: allNotifications\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getNotifications();\n  }\n\n  componentWillUnmount() {\n    this.notificationRef();\n  }\n\n  keyExtractor = (item, index) => index.toString();\n\n  renderItem = ({ item, index }) => {\n    return (\n      <ListItem\n        key={index}\n        leftElement={<Icon name=\"book\" type=\"font-awesome\" color=\"#696969\" />}\n        title={item.book_name}\n        titleStyle={styles.LiTitle}\n        subtitle={item.message}\n        bottomDivider\n      />\n    );\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={{ flex: 0.13 }}>\n          <MyHeader\n            title={\"Notifications\"}\n            navigation={this.props.navigation}\n          />\n        </View>\n        <View style={{ flex: 0.8 }}>\n          {this.state.allNotifications.length === 0 ? (\n            <View style={styles.imageView}>\n              <Image source={require(\"../assets/Notification.png\")} />\n              <Text style={{ fontSize: 25 }}>You have no notifications</Text>\n            </View>\n          ) : (\n            <SwipeableFlatlist allNotifications={this.state.allNotifications} />\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deeeed\"\n  },\n  imageView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  LiTitle: {\n    color: \"black\",\n    fontWeight: \"bold\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}